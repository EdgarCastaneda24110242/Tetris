@startuml TetrisDiagramaSimple

!theme plain
skinparam backgroundColor white
skinparam classBackgroundColor #E6F3FF
skinparam classBorderColor #2E86AB
skinparam arrow {
    Color #2E86AB
}

title TETRIS - DIAGRAMA DE CLASES SIMPLIFICADO\nArquitectura Principal del Proyecto

' ===================================
' === CLASES PRINCIPALES ===
' ===================================

class Juego {
    - ventana : EjecutarVentana
    - tablero : Tablero
    - piezaActual : Pieza*
    - proximaPieza : Pieza*
    - gameOver : bool
    - puntaje : int
    - nivel : int
    - musica : Musica
    __
    + Juego(ventanaPrincipal : sf::RenderWindow&)
    + Jugar() : void
    + CrearNuevaPieza() : void
    + MostrarMenuPrincipal() : void
    + MostrarRecords() : void
}

class Tablero {
    + ANCHO : int = 10
    + ALTO : int = 20
    + matriz : vector<vector<int>>
    __
    + Tablero()
    + VerificarColision(pieza : Pieza&) : bool
    + FijarPieza(pieza : Pieza&) : void
    + LimpiarLineas(ventana : sf::RenderWindow&) : int
}

class Pieza {
    + tipo : int
    + x : int
    + y : int
    + forma : vector<vector<int>>
    __
    + Pieza(tipo : int)
    + Rotar() : void
}

class EjecutarVentana {
    - window : sf::RenderWindow*
    __
    + EjecutarVentana(ancho : int, alto : int, titulo : string)
    + VerificarSiEstaAbierta() : bool
    + Limpiar() : void
    + Mostrar() : void
    + ProcesarEvento(evento : sf::Event&) : bool
    + ObtenerVentana() : sf::RenderWindow&
}

class Musica {
    - musica : sf::Music
    __
    + Musica(rutaArchivo : string)
    + Reproducir() : void
    + Detener() : void
    + Pausar() : void
    + EstablecerVolumen(volumen : float) : void
}

class Audio {
    - musica : sf::Music
    __
    + Audio(rutaArchivo : string)
    + Reproducir() : void
    + VerificarSiEstaReproduciendo() : bool
    + EstablecerVolumen(volumen : float) : void
}

' ===================================
' === CLASES DE UTILIDAD ===
' ===================================

class Puntos {
    - puntaje : int
    __
    + Puntos()
    + AgregarPuntos(lineas : int) : void
    + CalcularPuntaje() : int
    + Reiniciar() : void
}

class GameOverScreen {
    - ventana : sf::RenderWindow&
    __
    + GameOverScreen(ventana : sf::RenderWindow&)
    + Mostrar() : void
}

class Controles {
    __
    + ProcesarEvento(evento : sf::Event&) : Accion
}

enum Accion {
    Ninguna
    MoverIzquierda
    MoverDerecha
    Bajar
    Rotar
    Salir
}

' ===================================
' === CLASES DE RENDERIZADO ===
' ===================================

class TableroRender {
    __
    + DibujarFondo(...) : void
    + DibujarTablero(...) : void
    + DibujarPieza(...) : void
}

class FondoTablero {
    __
    + Dibujar(...) : void
}

class Bloque {
    __
    + Dibujar(...) : void
}

class ColorPieza {
    __
    + Obtener(tipo : int) : sf::Color
}

class Tetris {
    - tablero : Tablero
    - piezaActual : Pieza*
    - gameOver : bool
    __
    + Tetris()
    + Jugar() : void
    + CrearNuevaPieza() : void
}

' ===================================
' === RELACIONES PRINCIPALES ===
' ===================================

Juego "1" --> "1" Tablero
Juego "1" --> "1" EjecutarVentana  
Juego "1" --> "1" Musica
Juego "1" --> "0..2" Pieza
Juego "1" --> "1" GameOverScreen
Juego "1" --> "*" Audio
Juego "1" --> "1" Puntos
Juego "1" --> "1" Controles

Tetris "1" --> "1" Pieza

TableroRender "1" --> "1" Tablero
TableroRender "1" --> "*" Pieza
TableroRender "1" --> "*" Bloque
TableroRender "1" --> "1" ColorPieza
TableroRender "1" --> "1" FondoTablero

Tablero "1" --> "*" Pieza
Controles "1" --> "1" Accion

@enduml
